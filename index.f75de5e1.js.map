{"mappings":"AAAA;AAEA,uBAAuB,GAEvB,2BAA2B;AAC3B,MAAM,WAAW,SAAS,cAAc,CAAC;AACzC,MAAM,gBAAgB,SAAS,cAAc,CAAC;AAC9C,MAAM,YAAY,SAAS,cAAc,CAAC;AAC1C,8BAA8B;AAE9B,qDAAqD;AACrD,SAAS,gBAAgB,CAAC,oBAAoB;AAE9C,4DAA4D;AAC5D,UAAU,gBAAgB,CAAC,SAAS;AAEpC,gCAAgC;AAChC,SAAS;IACP,IAAI,SAAS,KAAK,KAAK,IACrB,4CAA4C;IAC5C,OAAO,KAAK,CAAC;SACR;QACL,MAAM,KAAK,SAAS,aAAa,CAAC;QAElC,GAAG,SAAS,CAAC,GAAG,CAAC;QACjB,GAAG,WAAW,GAAG,SAAS,KAAK;QAC/B,cAAc,WAAW,CAAC;QAE1B,MAAM,OAAO,SAAS,aAAa,CAAC;QAEpC,KAAK,SAAS,GAAG,QAAU,kBAAkB;QAC7C,KAAK,SAAS,CAAC,GAAG,CAAC;QACnB,GAAG,WAAW,CAAC;QAEf,oBAAoB;QACpB,SAAS,KAAK,GAAG;QACjB;QAEA,sCAAsC;QACtC,KAAK,OAAO,GAAG;YACb,cAAc,WAAW,CAAC;YAC1B;QACF;QAEA,2CAA2C;QAC3C,GAAG,OAAO,GAAG;YACX,GAAG,SAAS,CAAC,MAAM,CAAC;YACpB;QACF;IACF;AACF;AAEA,mCAAmC;AACnC,SAAS;IACP,aAAa,OAAO,CAAC,QAAQ,cAAc,SAAS;AACtD;AAEA,kCAAkC;AAClC,SAAS;IACP,MAAM,YAAY,aAAa,OAAO,CAAC;IAEvC,IAAI,WAAW;QACb,cAAc,SAAS,GAAG;QAE1B,qDAAqD;QACrD,MAAM,QAAQ,cAAc,sBAAsB,CAAC;QAEnD,KAAK,MAAM,QAAQ,MAAO;YACxB,qCAAqC;YACrC,MAAM,OAAO,KAAK,aAAa,CAAC;YAEhC,KAAK,OAAO,GAAG;gBACb,cAAc,WAAW,CAAC;gBAC1B;YACF;YAEA,kDAAkD;YAClD,KAAK,OAAO,GAAG;gBACb,KAAK,SAAS,CAAC,MAAM,CAAC;gBACtB;YACF;QACF;IACF;AACF","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\n/* global localStorage */\n\n// Получаем элементы из DOM\nconst inputBox = document.getElementById('input-box');\nconst listContainer = document.getElementById('list-container');\nconst addButton = document.getElementById('add-task-btn');\n// Добавлен элемент для кнопки\n\n// Загружаем сохранённые данные при загрузке страницы\ndocument.addEventListener('DOMContentLoaded', loadData);\n\n// Добавляем обработчик событий для кнопки \"Добавить задачу\"\naddButton.addEventListener('click', addTask);\n\n// Функция для добавления задачи\nfunction addTask() {\n  if (inputBox.value === '') {\n    // Если поле ввода пустое, выводим сообщение\n    window.alert('You have to write something!');\n  } else {\n    const li = document.createElement('li');\n\n    li.classList.add('todo-app__item');\n    li.textContent = inputBox.value;\n    listContainer.appendChild(li);\n\n    const span = document.createElement('span');\n\n    span.innerHTML = '\\u00d7'; // Символ крестика\n    span.classList.add('todo-app__item-remove');\n    li.appendChild(span);\n\n    // Добавление задачи\n    inputBox.value = '';\n    saveData();\n\n    // Удаление задачи по клику на крестик\n    span.onclick = function() {\n      listContainer.removeChild(li);\n      saveData();\n    };\n\n    // Отметка задачи как выполненной при клике\n    li.onclick = function() {\n      li.classList.toggle('todo-app__item--checked');\n      saveData();\n    };\n  }\n}\n\n// Сохранение данных в localStorage\nfunction saveData() {\n  localStorage.setItem('data', listContainer.innerHTML);\n}\n\n// Загрузка данных из localStorage\nfunction loadData() {\n  const savedData = localStorage.getItem('data');\n\n  if (savedData) {\n    listContainer.innerHTML = savedData;\n\n    // Восстанавливаем функциональность для каждой задачи\n    const items = listContainer.getElementsByClassName('todo-app__item');\n\n    for (const item of items) {\n      // Восстанавливаем состояние крестика\n      const span = item.querySelector('.todo-app__item-remove');\n\n      span.onclick = function() {\n        listContainer.removeChild(item);\n        saveData();\n      };\n\n      // Восстанавливаем состояние для выполнения задачи\n      item.onclick = function() {\n        item.classList.toggle('todo-app__item--checked');\n        saveData();\n      };\n    }\n  }\n}\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}
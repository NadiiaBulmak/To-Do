{"mappings":"ACKA,IAAM,EAAW,SAAS,cAAc,CAAC,aACnC,EAAgB,SAAS,cAAc,CAAC,kBACxC,EAAY,SAAS,cAAc,CAAC,gBA8C1C,SAAS,IACP,aAAa,OAAO,CAAC,OAAQ,EAAc,SAAS,CACtD,CA5CA,SAAS,gBAAgB,CAAC,mBA+C1B,WACE,IAAM,EAAY,aAAa,OAAO,CAAC,QAEvC,GAAI,EAAW,CACb,EAAc,SAAS,CAAG,EAG1B,IAAM,EAAQ,EAAc,sBAAsB,CAAC,kBAE9C,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAc,CAAA,CAAA,OAAA,QAAA,CAAA,GAAd,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,GAAA,A,WAAK,IAAM,EAAN,EAAA,KAAA,AAIH,CAFa,EAAK,aAAa,CAAC,0BAE3B,OAAO,CAAG,WACb,EAAc,WAAW,CAAC,GAC1B,GACF,EAGA,EAAK,OAAO,CAAG,WACb,EAAK,SAAS,CAAC,MAAM,CAAC,2BACtB,GACF,CACF,G,C,M,E,CAdK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAeP,CACF,GArEA,EAAU,gBAAgB,CAAC,QAG3B,WACE,GAAI,AAAmB,KAAnB,EAAS,KAAK,CAEhB,OAAO,KAAK,CAAC,oCACR,CACL,IAAM,EAAK,SAAS,aAAa,CAAC,MAElC,EAAG,SAAS,CAAC,GAAG,CAAC,kBACjB,EAAG,WAAW,CAAG,EAAS,KAAK,CAC/B,EAAc,WAAW,CAAC,GAE1B,IAAM,EAAO,SAAS,aAAa,CAAC,OAEpC,CAAA,EAAK,SAAS,CAAG,IACjB,EAAK,SAAS,CAAC,GAAG,CAAC,yBACnB,EAAG,WAAW,CAAC,GAGf,EAAS,KAAK,CAAG,GACjB,IAGA,EAAK,OAAO,CAAG,WACb,EAAc,WAAW,CAAC,GAC1B,GACF,EAGA,EAAG,OAAO,CAAG,WACX,EAAG,SAAS,CAAC,MAAM,CAAC,2BACpB,GACF,CACF,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n/* global localStorage */ // Получаем элементы из DOM\nvar inputBox = document.getElementById(\"input-box\");\nvar listContainer = document.getElementById(\"list-container\");\nvar addButton = document.getElementById(\"add-task-btn\");\n// Добавлен элемент для кнопки\n// Загружаем сохранённые данные при загрузке страницы\ndocument.addEventListener(\"DOMContentLoaded\", loadData);\n// Добавляем обработчик событий для кнопки \"Добавить задачу\"\naddButton.addEventListener(\"click\", addTask);\n// Функция для добавления задачи\nfunction addTask() {\n    if (inputBox.value === \"\") // Если поле ввода пустое, выводим сообщение\n    window.alert(\"You have to write something!\");\n    else {\n        var li = document.createElement(\"li\");\n        li.classList.add(\"todo-app__item\");\n        li.textContent = inputBox.value;\n        listContainer.appendChild(li);\n        var span = document.createElement(\"span\");\n        span.innerHTML = \"\\xd7\"; // Символ крестика\n        span.classList.add(\"todo-app__item-remove\");\n        li.appendChild(span);\n        // Добавление задачи\n        inputBox.value = \"\";\n        saveData();\n        // Удаление задачи по клику на крестик\n        span.onclick = function() {\n            listContainer.removeChild(li);\n            saveData();\n        };\n        // Отметка задачи как выполненной при клике\n        li.onclick = function() {\n            li.classList.toggle(\"todo-app__item--checked\");\n            saveData();\n        };\n    }\n}\n// Сохранение данных в localStorage\nfunction saveData() {\n    localStorage.setItem(\"data\", listContainer.innerHTML);\n}\n// Загрузка данных из localStorage\nfunction loadData() {\n    var savedData = localStorage.getItem(\"data\");\n    if (savedData) {\n        listContainer.innerHTML = savedData;\n        // Восстанавливаем функциональность для каждой задачи\n        var items = listContainer.getElementsByClassName(\"todo-app__item\");\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            var _loop = function() {\n                var item = _step.value;\n                // Восстанавливаем состояние крестика\n                var span = item.querySelector(\".todo-app__item-remove\");\n                span.onclick = function() {\n                    listContainer.removeChild(item);\n                    saveData();\n                };\n                // Восстанавливаем состояние для выполнения задачи\n                item.onclick = function() {\n                    item.classList.toggle(\"todo-app__item--checked\");\n                    saveData();\n                };\n            };\n            for(var _iterator = items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true)_loop();\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    }\n}\n\n//# sourceMappingURL=index.04e04192.js.map\n","'use strict';\n\n/* global localStorage */\n\n// Получаем элементы из DOM\nconst inputBox = document.getElementById('input-box');\nconst listContainer = document.getElementById('list-container');\nconst addButton = document.getElementById('add-task-btn');\n// Добавлен элемент для кнопки\n\n// Загружаем сохранённые данные при загрузке страницы\ndocument.addEventListener('DOMContentLoaded', loadData);\n\n// Добавляем обработчик событий для кнопки \"Добавить задачу\"\naddButton.addEventListener('click', addTask);\n\n// Функция для добавления задачи\nfunction addTask() {\n  if (inputBox.value === '') {\n    // Если поле ввода пустое, выводим сообщение\n    window.alert('You have to write something!');\n  } else {\n    const li = document.createElement('li');\n\n    li.classList.add('todo-app__item');\n    li.textContent = inputBox.value;\n    listContainer.appendChild(li);\n\n    const span = document.createElement('span');\n\n    span.innerHTML = '\\u00d7'; // Символ крестика\n    span.classList.add('todo-app__item-remove');\n    li.appendChild(span);\n\n    // Добавление задачи\n    inputBox.value = '';\n    saveData();\n\n    // Удаление задачи по клику на крестик\n    span.onclick = function() {\n      listContainer.removeChild(li);\n      saveData();\n    };\n\n    // Отметка задачи как выполненной при клике\n    li.onclick = function() {\n      li.classList.toggle('todo-app__item--checked');\n      saveData();\n    };\n  }\n}\n\n// Сохранение данных в localStorage\nfunction saveData() {\n  localStorage.setItem('data', listContainer.innerHTML);\n}\n\n// Загрузка данных из localStorage\nfunction loadData() {\n  const savedData = localStorage.getItem('data');\n\n  if (savedData) {\n    listContainer.innerHTML = savedData;\n\n    // Восстанавливаем функциональность для каждой задачи\n    const items = listContainer.getElementsByClassName('todo-app__item');\n\n    for (const item of items) {\n      // Восстанавливаем состояние крестика\n      const span = item.querySelector('.todo-app__item-remove');\n\n      span.onclick = function() {\n        listContainer.removeChild(item);\n        saveData();\n      };\n\n      // Восстанавливаем состояние для выполнения задачи\n      item.onclick = function() {\n        item.classList.toggle('todo-app__item--checked');\n        saveData();\n      };\n    }\n  }\n}\n"],"names":["inputBox","document","getElementById","listContainer","addButton","saveData","localStorage","setItem","innerHTML","addEventListener","savedData","getItem","items","getElementsByClassName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","_loop","item","value","span","querySelector","onclick","removeChild","classList","toggle","err","return","window","alert","li","createElement","add","textContent","appendChild"],"version":3,"file":"index.04e04192.js.map"}